security:
    # https://symfony.com/doc/current/security.html#registering-the-user-hashing-passwords
    password_hashers:
        App\Entity\User:
            algorithm: bcrypt   # Utilise bcrypt pour le hachage des mots de passe
    providers:
        app_user_provider:
            entity:
                class: App\Entity\User
                property: login
    firewalls:
        # Firewall principal
        main:
            # Permet l'authentification via un formulaire
            form_login:
                login_path: security_login
                check_path: security_login
                username_parameter: login   
                password_parameter: password  
                # Redirige après la connexion réussie
                default_target_path: /
                # Le champ 'remember me' est activé ici
                remember_me: true
            
            # Permet la déconnexion
            logout:
                path: security_logout
                target: / # Redirection après déconnexion (par défaut la page d'accueil)
    

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        # - { path: ^/admin, roles: ROLE_ADMIN }
        # - { path: ^/profile, roles: ROLE_USER }

when@test:
    security:
   
        password_hashers:
            # By default, password hashers are resource intensive and take time. This is
            # important to generate secure password hashes. In tests however, secure hashes
            # are not important, waste resources and increase test times. The following
            # reduces the work factor to the lowest possible values.
            Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface:
                algorithm: auto
                cost: 4 # Lowest possible value for bcrypt
                time_cost: 3 # Lowest possible value for argon
                memory_cost: 10 # Lowest possible value for argon
